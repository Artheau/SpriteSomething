name: üî®Build
description: Build app
inputs:
  os-name:
    required: true
    description: OS to run on
  python-version:
    required: true
    description: Python version to install
  pillow-version:
    required: true
    description: Pillow version to install

#########
# actions
#########
# actions/checkout@v3.1.0
# actions/download-artifact@v3.0.1
# actions/upload-artifact@v3.1.1
# Artheau/SpriteSomething/get-parent-dir
# JackMcKew/pyinstaller-action-linux@0.1.4
# JackMcKew/pyinstaller-action-windows@0.1.2
# mad9000/actions-find-and-replace-string@3

runs:
  using: "composite"
  steps:
    # checkout commit
    - name: ‚úîÔ∏èCheckout commit
      uses: actions/checkout@v3.1.0

    # get parent dir
    - name: üìÅGet Parent Directory
      id: parentDir
      uses: ./.github/actions/get-parent-dir

    # download pipline
    - name: üîΩDownload PipLine
      uses: actions/download-artifact@v3.0.1
      with:
        name: pipline-${{ inputs.os-name }}-${{ inputs.python-version }}-${{ inputs.pillow-version }}
        path: ./resources/user/meta/manifests

    # try to get UPX
    - name: Get UPX
      shell: bash
      env:
        OS_NAME: ${{ inputs.os-name }}
      run: |
        python ./resources/ci/common/get_upx.py

    # Prepare AppVersion
    - name: Prepare AppVersion
      shell: bash
      env:
        OS_NAME: ${{ inputs.os-name }}
      run: |
        python ./resources/ci/common/prepare_appversion.py

    # upload appversion artifact for later step
    - name: üîºUpload AppVersion Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: appversion-${{ inputs.os-name }}
        path: ./resources/app/meta/manifests/app_version.txt

    # run build.py
    - name: Build Binary (MacOS)
      shell: bash
      run: |
        pip install pyinstaller
        python -m source.meta.build
      # if: contains(inputs.os-name, 'macos')

    # run pyinstaller action
    # - name: Build Binary (Linux)
    #   uses: JackMcKew/pyinstaller-action-linux@0.1.4
    #   with:
    #     path: .
    #     spec: ./source/SpriteSomething.spec
    #     tkinter: true
    #   if: contains(inputs.os-name, 'linux') || contains(inputs.os-name, 'ubuntu')
    # - name: Build Binary (Windows)
    #   uses: JackMcKew/pyinstaller-action-windows@v0.1.2
    #   with:
    #     path: .
    #     spec: ./source/SpriteSomething.spec
    #   if: contains(inputs.os-name, 'windows')

    # upload binary artifact for later step
    - name: üîºUpload Problem Children Artifact
      if: failure()
      uses: actions/upload-artifact@v3.1.1
      with:
        name: problemchildren-${{ inputs.os-name }}-${{ inputs.python-version }}-${{ inputs.pillow-version }}
        path: ./resources/app/meta/manifests/excluded_dlls.json
        if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

    # prepare binary artifact for later step
    - name: Prepare Binary Artifact
      shell: bash
      env:
        OS_NAME: ${{ inputs.os-name }}
      run: |
        python ./resources/ci/common/prepare_binary.py

    # upload binary artifact for later step
    - name: üîºUpload Binary Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: binary-${{ inputs.os-name }}-${{ inputs.python-version }}-${{ inputs.pillow-version }}
        path: ${{ steps.parentDir.outputs.parentDir }}/artifact
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
