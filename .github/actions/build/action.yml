name: 🔨Build
description: Build app
inputs:
  os-name:
    required: true
    description: OS to run on
  python-version:
    required: true
    description: Python version to install
  pillow-version:
    required: true
    description: Pillow version to install

#########
# actions
#########
# actions/checkout@v4.1.1
# actions/download-artifact@v4.1.1
# actions/upload-artifact@v4.1.0
# Artheau/SpriteSomething/get-parent-dir
# JackMcKew/pyinstaller-action-linux@0.1.4
# JackMcKew/pyinstaller-action-windows@0.1.2
# mad9000/actions-find-and-replace-string@4

runs:
  using: "composite"
  steps:
    # checkout commit
    - name: ✔️Checkout commit
      shell: bash
      run: |
        echo "✔️Checkout commit"
    - name: ✔️Checkout commit
      uses: actions/checkout@v4.1.1

    # get parent dir
    - name: 📁Get Parent Directory
      shell: bash
      run: |
        echo "📁Get Parent Directory"
    - name: 📁Get Parent Directory
      id: parentDir
      uses: ./.github/actions/get-parent-dir

    # download pipline
    - name: 🔽Download PipLine
      shell: bash
      run: |
        echo "🔽Download PipLine"
    - name: 🔽Download PipLine
      uses: actions/download-artifact@v4.1.1
      with:
        name: pipline-build-${{ inputs.os-name }}-py${{ inputs.python-version }}-pil${{ inputs.pillow-version }}
        path: ./resources/user/meta/manifests

    # try to get UPX
    - name: 💬Get UPX
      shell: bash
      run: |
        echo "💬Get UPX"
    - name: Get UPX
      shell: bash
      env:
        OS_NAME: ${{ inputs.os-name }}
      run: |
        python ./resources/ci/common/get_upx.py

    # Set Run Number
    - name: 💬Set Run Number
      shell: bash
      run: |
        echo "💬Set Run Number"
    - name: Set Run Number
      id: set_run_number
      shell: bash
      run: |
        GITHUB_RUN_NUMBER="${{ github.run_number }}a${{ github.run_attempt }}"
        echo "github_run_number=$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT

    # Prepare AppVersion
    - name: 💬Prepare AppVersion
      shell: bash
      run: |
        echo "💬Prepare AppVersion"
    - name: Prepare AppVersion
      shell: bash
      env:
        OS_NAME: ${{ inputs.os-name }}
        GITHUB_RUN_NUMBER: ${{ steps.set_run_number.outputs.github_run_number }}
      run: |
        python ./resources/ci/common/prepare_appversion.py

    # upload appversion artifact for later step
    - name: 🔼Upload AppVersion Artifact
      shell: bash
      run: |
        echo "🔼Upload AppVersion Artifact"
    - name: 🔼Upload AppVersion Artifact
      uses: actions/upload-artifact@v4.1.0
      with:
        name: appversion-${{ inputs.os-name }}
        path: ./resources/app/meta/manifests/app_version.txt

    # run build.py
    - name: 💬Build Binary
      shell: bash
      run: |
        echo "💬Build Binary"
    - name: Build Binary
      shell: bash
      run: |
        pip install pyinstaller
        python -m source.meta.build
      # if: contains(inputs.os-name, 'macos')

    # run pyinstaller action
    # - name: Build Binary (Linux)
    #   uses: JackMcKew/pyinstaller-action-linux@0.1.4
    #   with:
    #     path: .
    #     spec: ./source/SpriteSomething.spec
    #     tkinter: true
    #   if: contains(inputs.os-name, 'linux') || contains(inputs.os-name, 'ubuntu')
    # - name: Build Binary (Windows)
    #   uses: JackMcKew/pyinstaller-action-windows@v0.1.2
    #   with:
    #     path: .
    #     spec: ./source/SpriteSomething.spec
    #   if: contains(inputs.os-name, 'windows')

    # upload binary artifact for later step
    - name: 🔼Upload Problem Children Artifact
      if: failure()
      shell: bash
      run: |
        echo "🔼Upload Problem Children Artifact"
    - name: 🔼Upload Problem Children Artifact
      if: failure()
      uses: actions/upload-artifact@v4.1.0
      with:
        name: problemchildren-${{ inputs.os-name }}-py${{ inputs.python-version }}-pil${{ inputs.pillow-version }}
        path: ./resources/app/meta/manifests/excluded_dlls.json
        if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

    # prepare binary artifact for later step
    - name: 💬Prepare Binary Artifact
      shell: bash
      run: |
        echo "💬Prepare Binary Artifact"
    - name: Prepare Binary Artifact
      shell: bash
      env:
        OS_NAME: ${{ inputs.os-name }}
      run: |
        python ./resources/ci/common/prepare_binary.py

    # upload binary artifact for later step
    - name: 🔼Upload Binary Artifact
      shell: bash
      run: |
        echo "🔼Upload Binary Artifact"
    - name: 🔼Upload Binary Artifact
      uses: actions/upload-artifact@v4.1.0
      with:
        name: binary-${{ inputs.os-name }}-py${{ inputs.python-version }}-pil${{ inputs.pillow-version }}
        path: ${{ steps.parentDir.outputs.parentDir }}/artifact
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
