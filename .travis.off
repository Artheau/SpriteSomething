#this file is mostly copied from https://docs.travis-ci.com/user/languages/python/
#it contains the information for automated testing on Github
#
#this is a python project, designed to be compatible with 3.6+
language: python

# cache pip
cache:
  directories:
    - $HOME/.cache/pip #linux
    - $HOME/Library/Caches/pip #macosx
    - $HOME/AppData/Local/pip/Cache #windows
    - $HOME/upx #upx

#default VM settings
os: linux
dist: bionic
python: "3.7"
env:
  global:
    - PYTHON_EXECUTABLE="python"
    - UPX_VERSION="3.95"
    - GR_CLI_VERSION="1.3.0"
    - REGEX="^([-\w]*)([.]|$)([\d]|exe|$)([.]|$)([\d]+|$)([-[:alpha:].]+|$)"
    - DEPLOYMENT="travis"
#    - DEPLOYMENT="github-releaser-cli"

# upgrade pip
# install pillow, numpy for app
# install pyinstaller, regex for distilling
# 4 Step
install:
  - ${PYTHON_EXECUTABLE} --version
  #install python dependencies
  #default deployment is yes
  #default pages deployment is no
  - ${PYTHON_EXECUTABLE} ./resources/ci/common/install.py
  - export DEPLOY_BINARY=yes
  - export DEPLOY_PAGES=no

# 5 Step
jobs:
  include:
    # 3.7 on Bionic Test
    - &tests
      stage: "Unit Tests"
      name: "Python 3.7 on Ubuntu Bionic: Test"
      dist: bionic
      python: "3.7"
      services: xvfb #needs a screen for tkinter
      # 6 Step
      before_script: echo "#do nothing before script"
      # 7 Step
      script: ${PYTHON_EXECUTABLE} -m unittest

    # 3.7 on Bionic Build/Deploy
    - &build-deploy
      stage: "Build/Deploy Binaries; Deploy GitHub Pages"
      name: "3.7 on Bionic: Build/Deploy"
      dist: bionic
      python: "3.7"
      services: xvfb #needs a screen for tkinter
      # 7 Step
      script:
        #run upx script
        # upx still doesn't quite work with race conditions of downloading vs processing
        # try to beat the race condition by having all this in one line
        #run build script
        - "if [ true ]; then \
            if [ \"${TRAVIS_DIST}\" != \"xenial\" ]; then \
              ${PYTHON_EXECUTABLE} ./resources/ci/common/get_upx.py; \
            fi; \
            ${PYTHON_EXECUTABLE} ./source/meta/build.py; \
          fi"
      # 9 Step
      after_success:
        #prepare files to upload
        - ${PYTHON_EXECUTABLE} ./resources/ci/common/prepare_binary.py
        - ${PYTHON_EXECUTABLE} ./resources/ci/common/prepare_appversion.py
        - ${PYTHON_EXECUTABLE} ./resources/ci/common/prepare_release.py
        - ${PYTHON_EXECUTABLE} ./resources/ci/common/prepare_pages.py
#        - "if [ \"${TRAVIS_OS_NAME}\" == \"windows\" ]; then \
#            ${PYTHON_EXECUTABLE} -m pip install pytz requests; \
#            ${PYTHON_EXECUTABLE} ./resources/ci/common/prepare_discord_notif.py; \
#          fi"

      # 10 Step
      before_deploy:
        #now that we have the tag sorted, set it in git
        - export TRAVIS_TAG=$(head -n 1 "./resources/app/meta/manifests/app_version.txt")
        - export TRAVIS_TAG="v${TRAVIS_TAG}"
        - export RELEASE_NAME="SpriteSomething ${TRAVIS_TAG}"
        - export FILES=../deploy/* #deploy archive
        - export PAGES=../pages #deploy pages
#        - git tag $TRAVIS_TAG
#        - git push origin $TRAVIS_TAG # probably need this for gh-actions interface to work
        #set body as a hyperlink to RELEASENOTES.md
        - export BODY=\"Please see [RELEASENOTES.md](https://github.com/${TRAVIS_REPO_SLUG}/blob/${TRAVIS_TAG}/RELEASENOTES.md) for description.\"; \

# Travis CI GitHub Releases provider
      # 11 Step
      deploy:
        - provider: releases
          token:
            secure: ${GITHUB_DEPLOY_KEY}
          name: ${RELEASE_NAME}
          release_notes: ${BODY}
          file_glob: true
          file: ${FILES}
          draft: true
          on:
            repo: Artheau/SpriteSomething
            condition: $DEPLOY_BINARY == "yes"
            branch: master
# Travis CI GitHub Pages provider
        - provider: pages
          local_dir: ${PAGES}
          token: ${GITHUB_DEPLOY_KEY}
          keep_history: true
          on:
            repo: Artheau/SpriteSomething
            condition: $DEPLOY_PAGES == "yes"
            branch: master

# GitHub Release CLI
#  waiting on lindell/github-release-cli#3
#  expected: 1 release with provided release body with 3 binaries
#  actual: 3 releases with provided release body with 1 binary each
#      deploy:
#        provider: script
#        script: ./github-releaser -draft -verbose
#        draft: true
#        on:
#          repo: Artheau/SpriteSomething
#          condition: $DEPLOY_BINARY == "yes"
#          branch: master

    # 3.7 on Xenial
    - <<: *tests
      name: "Python 3.7 on Ubuntu Xenial: Test"
      dist: xenial
      python: "3.7"
      services: xvfb #needs a screen for tkinter
    - <<: *build-deploy
      name: "3.7 on Xenial: Build/No Deploy"
      dist: xenial
      python: "3.7"
      services: xvfb #needs a screen for tkinter
      # 6 Step
      before_script:
        #cancel GHReleases deploy
        # print value for confirmation
        - "export DEPLOY_BINARY=no"
        - "echo \"Deploy Binary: ${DEPLOY_BINARY}\""

    # 3.6 on Xenial
    - <<: *tests
      name: "Python 3.6 on Ubuntu Xenial: Test"
      dist: xenial
      python: "3.6"
      services: xvfb #needs a screen for tkinter
    - <<: *build-deploy
      name: "3.6 on Xenial: Build/No Deploy"
      dist: xenial
      python: "3.6"
      services: xvfb #needs a screen for tkinter
      # 6 Step
      before_script:
        #cancel deploy
        # print value for confirmation
        - "export DEPLOY_BINARY=no"
        - "echo \"Deploy Binary: ${DEPLOY_BINARY}\""

    # 3.7 on macOS
    - <<: *tests
      name: "Python 3.7 on MacOSX 10.14 xcode 10.2: Test"
      os: osx
      osx_image: xcode10.2
      python: "3.7"
      services: #cancel services
      language: shell #'language: python' breaks on Travis CI macOSX
      # 3 Step
      before_install:
        #macosx uses python3
        - export PYTHON_EXECUTABLE=python3
    - <<: *build-deploy
      name: "3.7 on MacOSX: Build/Deploy"
      os: osx
      osx_image: xcode10.2
      python: "3.7"
      services: #cancel services
      language: shell #'language: python' breaks on Travis CI macOSX
      # 3 Step
      before_install:
        #macosx uses python3
        - export PYTHON_EXECUTABLE=python3

    # 3.7 on Windows
    # Windows VMs currently are slow
    - <<: *tests
      name: "Python 3.7 on Windows 10 v1809: Test"
      os: windows
      python: "3.7"
      services: xvfb #needs a screen for tkinter
      language: shell #'language: python' breaks on Travis CI Windows
      # 3 Step
      before_install:
        #install python
        #set python path
        #get pip
        #install pip
        #install more windows dependences
        - choco install python --version 3.7.6
        - ${PYTHON_EXECUTABLE} --version
        - export PATH=/c/Python37:/c/Python37/Scripts:$PATH
        - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        - ${PYTHON_EXECUTABLE} get-pip.py
    - <<: *build-deploy
      name: "3.7 on Windows: Build/Deploy/Pages"
      os: windows
      python: "3.7"
      services: xvfb #needs a screen for tkinter
      language: shell #'language: python' breaks on Travis CI Windows
      # 3 Step
      before_install:
        #install python
        #set python path
        #get pip
        #install pip
        #install more windows dependences
        - choco install python --version 3.7.6
        - export PATH=/c/Python37:/c/Python37/Scripts:$PATH
        - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        - ${PYTHON_EXECUTABLE} get-pip.py
        - ${PYTHON_EXECUTABLE} -m pip install --upgrade pip
      # 6 Step
      before_script:
        #enable GHPages deploy
        # print value for confirmation
        - "export DEPLOY_PAGES=yes"
        - "echo \"Deploy Pages: ${DEPLOY_PAGES}\""

#nobody wants emails
notifications:
  email: false
